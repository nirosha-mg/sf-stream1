<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>51.0</apiVersion>
    <assignments>
        <name>add_to_our_word_change_to_lower_case</name>
        <label>add to our word &amp; change to lower case</label>
        <locationX>907</locationX>
        <locationY>683</locationY>
        <assignmentItems>
            <assignToReference>MidString</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>SetToLower</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CurrentWord</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>SetToLower</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Append_Char_to_Output_string</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Append_Char_to_Output_string</name>
        <label>Append Char to Output string</label>
        <locationX>935</locationX>
        <locationY>1046</locationY>
        <assignmentItems>
            <assignToReference>OutputString</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>MidString</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>increment_Counter</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Capitalise_and_add_to_our_word_change_to_lower_case</name>
        <label>Capitalise and add to our word &amp; change to lower case</label>
        <locationX>1092</locationX>
        <locationY>665</locationY>
        <assignmentItems>
            <assignToReference>MidString</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>SetToUpper</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CurrentWord</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>SetToUpper</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>AutoCap</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Append_Char_to_Output_string</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>change_to_upper_case</name>
        <label>change to upper case</label>
        <locationX>194</locationX>
        <locationY>444</locationY>
        <assignmentItems>
            <assignToReference>MidString</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetNextChar</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>OutputString</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>SetToUpper</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>get_next_character</name>
        <label>get next character</label>
        <locationX>861</locationX>
        <locationY>316</locationY>
        <assignmentItems>
            <assignToReference>MidString</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetNextChar</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>What_is_the_char</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>increment_Counter</name>
        <label>increment Counter</label>
        <locationX>691</locationX>
        <locationY>1011</locationY>
        <assignmentItems>
            <assignToReference>counter</assignToReference>
            <operator>Add</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>AutoCap</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>is_Count_String_Len</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>prep_the_input_string</name>
        <label>prep the input string</label>
        <locationX>50</locationX>
        <locationY>146</locationY>
        <assignmentItems>
            <assignToReference>InputString</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>PrepString</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>set_string_len_var</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>replace_output_string_last_word</name>
        <label>replace output string last word</label>
        <locationX>1535</locationX>
        <locationY>655</locationY>
        <assignmentItems>
            <assignToReference>OutputString</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>ReplaceOutputStrLastWord</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Append_Char_to_Output_string</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Auto_cap_to_True1</name>
        <label>Set Auto cap to True1</label>
        <locationX>1332</locationX>
        <locationY>735</locationY>
        <assignmentItems>
            <assignToReference>AutoCap</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CurrentWord</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>MidString</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Append_Char_to_Output_string</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>set_is_first_char_is_true</name>
        <label>set is first char is true</label>
        <locationX>1514</locationX>
        <locationY>314</locationY>
        <assignmentItems>
            <assignToReference>IsFirstChar</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>eval_Word_for_exceptions</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>set_string_len_var</name>
        <label>set string len var</label>
        <locationX>429</locationX>
        <locationY>152</locationY>
        <assignmentItems>
            <assignToReference>StringLen</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetStringLen</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>What_is_the_String_Len</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>start_curr_word_change_to_upper_case</name>
        <label>start curr word &amp; change to upper case</label>
        <locationX>718</locationX>
        <locationY>503</locationY>
        <assignmentItems>
            <assignToReference>MidString</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>SetToUpper</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>IsFirstChar</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CurrentWord</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>SetToLower</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Append_Char_to_Output_string</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>eval_Word_for_exceptions</name>
        <label>eval Word for exceptions</label>
        <locationX>1523</locationX>
        <locationY>476</locationY>
        <defaultConnector>
            <targetReference>Append_Char_to_Output_string</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>word_is_exception</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>WordInExceptionList</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>replace_output_string_last_word</targetReference>
            </connector>
            <label>word is exception</label>
        </rules>
    </decisions>
    <decisions>
        <name>is_Auto_cap_true</name>
        <label>is Auto-cap true</label>
        <locationX>1078</locationX>
        <locationY>562</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>AutoCap</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Capitalise_and_add_to_our_word_change_to_lower_case</targetReference>
            </connector>
            <label>yes</label>
        </rules>
        <rules>
            <name>No1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>AutoCap</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>add_to_our_word_change_to_lower_case</targetReference>
            </connector>
            <label>No1</label>
        </rules>
    </decisions>
    <decisions>
        <name>is_Count_String_Len</name>
        <label>is Count &gt; String Len</label>
        <locationX>626</locationX>
        <locationY>311</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>yes1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>counter</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>StringLen</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>get_next_character</targetReference>
            </connector>
            <label>yes1</label>
        </rules>
    </decisions>
    <decisions>
        <name>What_is_the_char</name>
        <label>What is the char?</label>
        <locationX>1115</locationX>
        <locationY>336</locationY>
        <defaultConnector>
            <targetReference>is_Auto_cap_true</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>a_space</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>MidString</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue> </stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>set_is_first_char_is_true</targetReference>
            </connector>
            <label>a space</label>
        </rules>
        <rules>
            <name>First_char_of_word</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>IsFirstChar</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>start_curr_word_change_to_upper_case</targetReference>
            </connector>
            <label>First char of word</label>
        </rules>
        <rules>
            <name>set_auto_cap_to_true</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>AutoCap</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Auto_cap_to_True1</targetReference>
            </connector>
            <label>set auto-cap to true</label>
        </rules>
    </decisions>
    <decisions>
        <name>What_is_the_String_Len</name>
        <label>What is the String Len</label>
        <locationX>414</locationX>
        <locationY>305</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Three</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>StringLen</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <numberValue>3.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>is_Count_String_Len</targetReference>
            </connector>
            <label>Three</label>
        </rules>
        <rules>
            <name>X1_or_2_char</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>StringLen</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>1.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>StringLen</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>2.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>change_to_upper_case</targetReference>
            </connector>
            <label>1 or 2 char</label>
        </rules>
        <rules>
            <name>Zero</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>StringLen</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <label>Zero</label>
        </rules>
    </decisions>
    <formulas>
        <name>formCurrentWordMidString</name>
        <dataType>String</dataType>
        <expression>{!CurrentWord} + {!MidString}</expression>
    </formulas>
    <formulas>
        <name>GetCurrWordFirstChar</name>
        <dataType>String</dataType>
        <expression>IF({!counter}=1, UPPER({!MidString}), {!MidString})</expression>
    </formulas>
    <formulas>
        <name>GetNextChar</name>
        <dataType>String</dataType>
        <expression>MID({!InputString}, {!counter}, 1)</expression>
    </formulas>
    <formulas>
        <name>GetStringLen</name>
        <dataType>Number</dataType>
        <expression>LEN({!InputString})</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <name>LenTrimMidStr</name>
        <dataType>Number</dataType>
        <expression>LEN(SUBSTITUTE({!MidString}, &quot; &quot;, &quot;&quot;))</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <name>PrepString</name>
        <dataType>String</dataType>
        <expression>LOWER(TRIM({!InputString}))</expression>
    </formulas>
    <formulas>
        <name>ReplaceOutputStrLastWord</name>
        <dataType>String</dataType>
        <expression>LEFT({!OutputString}, LEN({!OutputString})-LEN({!CurrentWord})) + {!CurrentWord}</expression>
    </formulas>
    <formulas>
        <name>SetToLower</name>
        <dataType>String</dataType>
        <expression>LOWER({!CurrentWord})</expression>
    </formulas>
    <formulas>
        <name>SetToUpper</name>
        <dataType>String</dataType>
        <expression>UPPER({!MidString})</expression>
    </formulas>
    <formulas>
        <name>WordInExceptionList</name>
        <dataType>Boolean</dataType>
        <expression>IF({!IsPersonName}, CONTAINS({!NameExceptions}, {!CurrentWord}), CONTAINS({!TitleExceptions}, {!CurrentWord}))</expression>
    </formulas>
    <interviewLabel>TextToProperText {!$Flow.CurrentDateTime}</interviewLabel>
    <label>TextToProperText</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <start>
        <locationX>592</locationX>
        <locationY>48</locationY>
        <connector>
            <targetReference>prep_the_input_string</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <textTemplates>
        <description>This is a list of name elements that are typically left in lower case</description>
        <name>NameExceptions</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>de;la;van;von</text>
    </textTemplates>
    <textTemplates>
        <name>TitleExceptions</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>or;and;the;a;an</text>
    </textTemplates>
    <variables>
        <name>AutoCap</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <description>characters that indicate the next letter should be capitalized, like an apostrophe or dash
Examples: O’Leary, Walla-Walla</description>
        <name>AutoCapChars</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>incremented each time through the loop</description>
        <name>counter</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>1.0</numberValue>
        </value>
    </variables>
    <variables>
        <description>string of characters between spaces. Every time a space is encountered the current word is inspected to see if it is an exception.</description>
        <name>CurrentWord</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Input variable that receives the string to be converted to proper case.</description>
        <name>InputString</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue></stringValue>
        </value>
    </variables>
    <variables>
        <description>used to indicate if the character being examined is the first character of a word.</description>
        <name>IsFirstChar</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>true</booleanValue>
        </value>
    </variables>
    <variables>
        <description>an optional input variable for the calling flow to set to true</description>
        <name>IsPersonName</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <description>holds each character of the string one-by-one as the string is parsed</description>
        <name>MidString</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>final result</description>
        <name>OutputString</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <value>
            <stringValue></stringValue>
        </value>
    </variables>
    <variables>
        <description>see if the entire string has been examined</description>
        <name>StringLen</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
</Flow>
